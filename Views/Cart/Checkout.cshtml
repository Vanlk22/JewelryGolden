@model JewelryGolden.Models.CheckoutViewModel
@{
    ViewBag.Title = "Thanh toán";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h2 class="mb-4">
                <i class="fas fa-credit-card"></i> Thanh toán đơn hàng
            </h2>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Thông tin khách hàng</h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Checkout", "Cart", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="CustomerName" class="form-label">Họ và tên *</label>
                                @Html.TextBoxFor(m => m.CustomerName, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.CustomerName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="CustomerMobile" class="form-label">Số điện thoại *</label>
                                @Html.TextBoxFor(m => m.CustomerMobile, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.CustomerMobile, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="CustomerEmail" class="form-label">Email *</label>
                                @Html.TextBoxFor(m => m.CustomerEmail, new { @class = "form-control", type = "email", required = "required" })
                                @Html.ValidationMessageFor(m => m.CustomerEmail, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="PaymentMethod" class="form-label">Phương thức thanh toán *</label>
                                @Html.DropDownListFor(m => m.PaymentMethod, new SelectList(new[]
                                {
                                    new { Value = "cod", Text = "Thanh toán khi nhận hàng (COD)" },
                                    new { Value = "bank_transfer", Text = "Chuyển khoản ngân hàng" },
                                    new { Value = "credit_card", Text = "Thẻ tín dụng" }
                                }, "Value", "Text"), "-- Chọn phương thức thanh toán --", new { @class = "form-select", required = "required" })
                                @Html.ValidationMessageFor(m => m.PaymentMethod, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="CustomerAddress" class="form-label">Địa chỉ giao hàng *</label>
                            @Html.TextAreaFor(m => m.CustomerAddress, new { @class = "form-control", rows = "3", required = "required" })
                            @Html.ValidationMessageFor(m => m.CustomerAddress, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            <label for="CustomerMessage" class="form-label">Ghi chú</label>
                            @Html.TextAreaFor(m => m.CustomerMessage, new { @class = "form-control", rows = "3", placeholder = "Ghi chú thêm về đơn hàng..." })
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a href="@Url.Action("Index")" class="btn btn-outline-secondary me-md-2">
                                <i class="fas fa-arrow-left"></i> Quay lại giỏ hàng
                            </a>
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-check"></i> Đặt hàng
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Đơn hàng của bạn</h5>
                </div>
                <div class="card-body">
                    @if (Model.CartItems != null && Model.CartItems.Any())
                    {
                        <div class="order-items">
                            @foreach (var item in Model.CartItems)
                            {
                                <div class="d-flex align-items-center mb-3">
                                    <img src="@Url.Content(item.ProductImage)" 
                                         alt="@item.ProductName" 
                                         class="checkout-product-image me-3"
                                         style="width: 60px; height: 60px; object-fit: cover; border-radius: 4px;">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">@item.ProductName</h6>
                                        <small class="text-muted">Số lượng: @item.Quantity</small>
                                    </div>
                                    <div class="text-end">
                                        <span class="fw-bold">@item.TotalPrice.ToString("N0") ₫</span>
                                    </div>
                                </div>
                            }
                        </div>
                        
                        <hr>
                        
                        <div class="d-flex justify-content-between mb-2">
                            <span>Tổng sản phẩm:</span>
                            <span>@Model.CartItems.Sum(x => x.Quantity)</span>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <span>Tạm tính:</span>
                            <span>@Model.CartItems.Sum(x => x.TotalPrice).ToString("N0") ₫</span>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <span>Phí vận chuyển:</span>
                            <span class="text-success">Miễn phí</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between">
                            <strong>Tổng cộng:</strong>
                            <strong class="text-primary fs-5">@Model.TotalAmount.ToString("N0") ₫</strong>
                        </div>
                    }
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="mb-0">Thông tin thanh toán</h6>
                </div>
                <div class="card-body">
                    <div class="payment-info">
                        <h6><i class="fas fa-info-circle text-info"></i> COD (Thanh toán khi nhận hàng)</h6>
                        <p class="small text-muted">Bạn sẽ thanh toán bằng tiền mặt khi nhận được hàng.</p>
                        
                        <h6><i class="fas fa-university text-success"></i> Chuyển khoản ngân hàng</h6>
                        <p class="small text-muted">Chuyển khoản vào tài khoản ngân hàng của chúng tôi.</p>
                        
                        <h6><i class="fas fa-credit-card text-warning"></i> Thẻ tín dụng</h6>
                        <p class="small text-muted">Thanh toán bằng thẻ Visa, MasterCard.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Bootstrap form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}

<style>
    .checkout-product-image {
        border: 1px solid #dee2e6;
    }
    
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: 1px solid rgba(0, 0, 0, 0.125);
    }
    
    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid rgba(0, 0, 0, 0.125);
    }
    
    .payment-info h6 {
        margin-top: 1rem;
        margin-bottom: 0.5rem;
    }
    
    .payment-info h6:first-child {
        margin-top: 0;
    }
    
    .form-label {
        font-weight: 600;
    }
    
    .needs-validation .form-control:invalid {
        border-color: #dc3545;
    }
    
    .needs-validation .form-control:valid {
        border-color: #198754;
    }
</style>
